C     -*- Mode: Fortran -*-
C     
C     kflrngd-rngnxt.f
C
C     The API to access the sequence of random numbers, in the spirit of
C     the the C interface.
C
C     Original header message.
C     
C     FORTRAN IV (66) version of "ranf_array"
C     from Seminumerical Algorithms by D E Knuth, 3rd edition (1997)
C     including the MODIFICATIONS made in the 9th printing (2002)
C     and a bugfix to make this compatible with rng-double.c (2012)
C     ********* see the book for explanations and caveats! *********
C
C     Changes by Marco Antoniotti, 2023-12-20
C     DISCo, Universita` degli Studi di Milano-Bicocca, Milan, Italy
C     
C
C     KRNNXT
C     Returns the current index in the sequence of random numbers.
C
C     The integer input is ignored; it is necessary to placate the
C     Fortran H compiler on MVS 3.8j (yep: ancient stuff).
C     
      INTEGER FUNCTION KRNNXT(I)
      INTEGER RANNXT, QUAL
      DOUBLE PRECISION RANBUF
      COMMON /RNGNXT/ RANBUF(1009), RANNXT, QUAL
C     PARAMETER (QUAL = 1009)
C
      KRNNXT = RANNXT
      RETURN
      END
C
C     RNDNXD
C     Returns the next DOUBLE PRECISION random number available from the
C     sequence generated by RNFARR.
C
C     The integer input IRND is effectively ignored (even if it is
C     passed to RNDCYC.
C     
      DOUBLE PRECISION FUNCTION RNDNXD(IRND)
      INTEGER RANNXT, QUAL, KK, LL, KKK
      DOUBLE PRECISION RANX, RANBUF, RNDCYD
C     PARAMETER (KK = 100)
C     PARAMETER (QUAL = 1009)
      COMMON /PARMS/ KK, LL, KKK
      COMMON /RSTATE/ RANX(100)
      COMMON /RNGNXT/ RANBUF(1009), RANNXT, QUAL
C
      EXTERNAL RNDCYD
C
C     WRITE (6, 4242) RANNXT
C4242 FORMAT (' RNDXD: RANNXT = ', I3)
      IF ((RANNXT .GE. 1) .AND. (RANNXT .LE. KK)) GO TO 101
      GOTO 102
C     THEN
 101  RNDNXD = RANBUF(RANNXT)
      RANNXT = RANNXT + 1
      GOTO 103
C     ELSE
 102  RNDNXD = RNDCYD(IRND)
 103  CONTINUE
      RETURN
      END
      
C
C     RNDCYD
C     Returns the next DOUBLE PRECISION random number after calling
C     RNFARR.
C     
      DOUBLE PRECISION FUNCTION RNDCYD(IRND)
      INTEGER RANNXT, QUAL, KK, LL, KKK
      DOUBLE PRECISION RANBUF
C     PARAMETER (KK = 100)
C     PARAMETER (QUAL = 1009)
      COMMON /PARMS/ KK, LL, KKK
      COMMON /RNGNXT/ RANBUF(1009), RANNXT, QUAL
      EXTERNAL RNFSTR, RNFARR, RNPBUF
C
C     RANXNX should be equal to 0 or KK + 1 now.
C
C     WRITE (6, 4242) RANNXT
C4242 FORMAT (' RNDCYD RANNXT = ', I3, /)
      IF ((RANNXT .LE. 0) .OR. (RANNXT .GE. KK + 1)) GO TO 101
      GO TO 102
C     THEN
 101  CALL RNFSTR(314159)
 102  CONTINUE
C     
      CALL RNFARR(RANBUF, QUAL)
      RNDCYD = RANBUF(1)
      RANNXT = 2
C     CALL RNPBUF(1, 5)
      RETURN
      END
C
C
C     RNFPBUF
C     Prints some numbers of the RANBUF
C
      SUBROUTINE RNPBUF(LOW, HIGH)
      INTEGER LOW, HIGH
      INTEGER RANNXT
      DOUBLE PRECISION RANBUF
C     PARAMETER (QUAL = 1009)
      COMMON /RNGNXT/ RANBUF(1009), RANNXT
      EXTERNAL RNAPRT
C
 11   FORMAT (' RNPBUF RANNXT = ', I3)
 10   FORMAT (' RUNBUF(', I3, ') = ', F22.20)

      WRITE (6, 11) RANNXT
      DO 1 I = LOW, HIGH
         WRITE (6, 10) I, RANBUF(I)
 1    CONTINUE
      RETURN
C     end of file -- kflrngd-rngnxt.f
      END
C
C     
C     RNSPRN
C     Prints the RNG state.
C
      SUBROUTINE RNSPRN(N)
      INTEGER N, KK, LL, KKK, RANXNX, QUAL
      DOUBLE PRECISION RANX, RANBUF
      COMMON /PARMS/ KK, LL, KKK
      COMMON /RSTATE/ RANX(100)
      COMMON /RANXNX/ RANXNX, QUAL, RANBUF(2009)

C     Do nothing
      IF ((N .LE. 0) .OR. (N .GT. QUAL)) GO TO 2048
      
      IF ((RANXNX .GE. 0) .AND. (RANXNX .LE. KK)) GO TO 101
      GO TO 102
C     THEN
 101  WRITE (6, 666) RANXNX
 666  FORMAT (' RNG DB STATE: ', I3)
      DO 10 I = 1, N
         WRITE (6, 667) I, RANX(I)
 667     FORMAT (' RANX(', I3, ') = ', F22.20)
 10   CONTINUE
      DO 11 I = 1, N
         WRITE (6, 668) I, RANBUF(I)
 668     FORMAT ('  BUF(', I3, ') = ', F22.20)
 11   CONTINUE
      GO TO 100
C     ELSE
 102  WRITE (6, 1024) RANXNX
 1024 FORMAT (' RNG DB STATE: RANXNX = ', I3, ' out of bounds.')
 100  CONTINUE
 2048 RETURN
C     end of file -- kflrngd-rngnxt.f
      END
