C     -*- Mode: Fortran -*-
C     
C     kflrngi-rngnxt.f
C
C     The API to access the sequence of random numbers, in the spirit of
C     the the C interface.
C
C     Original header message.
C     
C     FORTRAN 77 version of "ranf_array"
C     from Seminumerical Algorithms by D E Knuth, 3rd edition (1997)
C     including the MODIFICATIONS made in the 9th printing (2002)
C     and a bugfix to make this compatible with rng-double.c (2012)
C     ********* see the book for explanations and caveats! *********
C
C     Changes by Marco Antoniotti, 2023-12-20
C     DISCo, Universita` degli Studi di Milano-Bicocca, Milan, Italy
C
C
C     KRNNXT
C     Returns the current index in the sequence of random numbers.
C
C     The integer input is ignored; it is necessary to placate the
C     Fortran H compiler on MVS 3.8j (yep: ancient stuff).
C     
      INTEGER FUNCTION KRNNXT(I)
      INTEGER RANNXT, QUAL
      INTEGER RANBUF
      PARAMETER (QUAL = 1009)
      COMMON /RNGNXT/ RANBUF(QUAL), RANNXT
      SAVE /RNGNXT/
      KRNNXT = RANNXT
      RETURN
      END
C
C     RNDNXI
C     Returns the next DOUBLE PRECISION random number available from the
C     sequence generated by RNFARR.
C
C     The integer input IRND is effectively ignored (even if it is
C     passed to RNDCYC.
C
      INTEGER FUNCTION RNDNXI(IRND)
      INTEGER RANNXT, QUAL
      INTEGER RANBUF, RNDCYI
      PARAMETER (KK = 100)
      PARAMETER (QUAL = 1009)
      COMMON /RNGNXT/ RANBUF(QUAL), RANNXT
      SAVE /RNGNXT/
      EXTERNAL RNDCYI

C     PRINT '(A, I3)', 'RNDNXD RANNXT = ', RANNXT
      IF ((RANNXT .GE. 1) .AND. (RANNXT .LE. KK)) THEN
         RNDNXD = RANBUF(RANNXT)
         RANNXT = RANNXT + 1
      ELSE
         RNDNXD = RNDCYI(IRND)
      END IF
      RETURN
      END
      
C
C     RNDCYI
C     Returns the next DOUBLE PRECISION random number after calling
C     RNFARR.
C
      INTEGER FUNCTION RNDCYI(IRND)
      INTEGER RANNXT, QUAL, KK
      INTEGER RANBUF
      PARAMETER (KK = 100)
      PARAMETER (QUAL = 1009)
      COMMON /RNGNXT/ RANBUF(QUAL), RANNXT
      SAVE /RNGNXT/
      EXTERNAL RNSTRT, RNARRY, RNPBUF
C
C     RANXNX should be equal to 0 or KK + 1 now.
C
C     PRINT '(A, I3)', 'RNDCYD RANNXT = ', RANNXT
      IF ((RANNXT .LE. 0) .OR. (RANNXT .GE. KK + 1)) THEN
         CALL RNSTRT(314159)
      END IF
C     
      CALL RNARRY(RANBUF, QUAL)
      RNDCYI = RANBUF(1)
      RANNXT = 2
C     CALL RNPBUF(1, 5)
      RETURN
      END
C
C
C     RNFPBUF
C     Prints some numbers of the RANBUF
C
      SUBROUTINE RNPBUF(LOW, HIGH)
      INTEGER LOW, HIGH
      INTEGER RANNXT, QUAL
      INTEGER RANBUF
      PARAMETER (QUAL = 1009)
      COMMON /RNGNXT/ RANBUF(QUAL), RANNXT
      SAVE /RNGNXT/

 10   FORMAT (' RUNBUF(', I3, ') = ', F22.20)

      PRINT '(A, I3)', 'RNPBUF RANNXT = ', RANNXT
      DO 1 I = LOW, HIGH
         WRITE (6, 10) I, RANBUF(I)
 1    CONTINUE
      RETURN
      END
C      
C     end of file -- kflrngd-rngnxt.f
